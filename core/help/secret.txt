anc secret <subcommand> <id> [file]

Manage encrypted secrets stored in the remote Anchor server.

Subcommands:
  ls                    List available secrets (IDs and descriptions)
  get <id>              Retrieve secret value as plaintext (if allowed)
  pull <id>             Download full secret metadata as JSON into ~/.anchors/ref/
  update <id>           Update description, users, groups, or secret value
  push <id> [file]      Create a new secret using a string, file, or interactive mode
  del <id>              Delete a secret (only by its creator)
  rm <id>               Alias for `del`

Examples:
  anc secret ls
    → Lists all secrets visible to your user and groups

  anc secret get db-pass
    → Prints the plaintext value if access is allowed

  anc secret get db-pass --out ~/.secrets/.pgpass
    → Saves the secret content to a file

  anc secret pull db-pass
    → Saves full metadata as JSON to ~/.anchors/ref/db-pass.json

  anc secret update db-pass
    → Starts an interactive update flow

  anc secret push ssh-key ~/.ssh/id_rsa
    → Uploads the file content as a secret (asks interactively for metadata)

  anc secret push ssh-key --secret "$(cat ~/.ssh/id_rsa)" --desc "private key" --users manu --groups dev --gedit
    → Fully non-interactive push using all fields as flags

Options for `push`:
  --desc "..."          Description of the secret
  --users "a,b,c"       Comma-separated list of allowed users
  --groups "x,y,z"      Comma-separated list of allowed groups
  --gedit               Allow groups to update the secret (group edit = true)
  --secret "..."        Provide the secret content directly (incompatible with file)

Options for `get`:
  --out <file>          Save the secret value to a file instead of printing to stdout

Behavior:
  - If no metadata flags are provided, `push` runs interactively and asks all fields
  - If any of the flags (`--desc`, `--secret`, etc.) are present, it runs non-interactively
  - Only one source can be provided: a file (positional) or `--secret`, not both
  - Secrets are encrypted with AES-256-GCM on the server; no plaintext is stored
  - Creator can restrict edits to themselves only using `--gedit` (true/false)

Notes:
  - Anchors server must be configured via `anc server url` and authenticated with `anc server auth`
  - Secrets are only stored remotely unless you run `anc secret pull`
